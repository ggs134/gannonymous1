# all the import
from __future__ import with_statement
import sqlite3
import MySQLdb as mariadb
from flask import Flask, request, session, g, redirect, url_for, abort, render_template, flash
from contextlib import closing

#configuration
DATABASE = '/tmp/flaskr.db'
DEBUG = True
SECRET_KEY = '1234'
USERNAME = 'admin'
PASSWORD = 'wjdtnsgud1!'

#create our little application
app=Flask(__name__)
app.config.from_object(__name__)

def connect_db():
	return mariadb.connect('localhost','root', 'wjdtnsgud1!','annonymous')
#	return sqlite3.connect(app.config['DATABASE'])

def init_db():
	with closing(connect_db()) as db:
		with app.open_resource('schema.sql') as f:
			db.cursor().executescript(f.read())
		db.commit()

# @app.before_request
# def before_request():
# 	con=connect_db()
# #	g.db=connect_db()
	
# @app.teardown_request
# def teardown_request(exception):
# #	g.db.close()
# 	con.close()

@app.route('/')
def show_entries():
#	cur=g.db.execute('select title, text from entries order by id desc')
	session['board']='entries'
	con=connect_db()
	cursor=con.cursor()
	cursor.execute('select title, text from entries order by id desc')
	entries=[dict(title=row[0], text=row[1]) for row in cursor.fetchall()]
	cursor.close()
	con.close()
	return render_template('show_entries.html', entries=entries)

@app.route('/add', methods=['POST'])
def add_entry():
	# if not session.get('logged_in'):
	# 	abort(401)
	board=session.get['board']
	con=connect_db()
	cursor=con.cursor()
	table=board
	cursor.execute('insert into'+table+'(title, text) values (%s,%s)',[request.form['title'], request.form['text']])
	con.commit()
	cursor.close()
	con.close()
#	con.cursor().execute('insert into entries (title, text) values (?,?)',[request.form['title'], request.form['text']])
#	con.commit()
	flash('New entry was successfully posted')
	if board!='entries':
		return redirect(url_for(board))
	else:
		return redirect(url_for('show_entries'))

@app.route('/login', methods=['GET','POST'])
def login():
	error=None
	if request.method=='POST':
		if request.form['username'] != app.config['USERNAME']:
			error='invalid username'
		elif request.form['password'] != app.config['PASSWORD']:
			error='invalid password'
		else:
			session['logged_in']=True
			flash('You were logged in')
			return redirect(url_for('show_entries'))
	return render_template('login.html', error=error)
	
@app.route('/logout')
def logout():
	session.pop('logged_in', None)
	flash('You were logged out')
	return redirect(url_for('show_entries'))

@app.route('/board1')
def board1():
	session['board']='board1'
	con=connect_db()
	cursor=con.cursor()
	cursor.execute('select title,text from board1 order by id desc')
	writings=[dict(title=row[0], text=row[1]) for row in cursor.fetchall()]
	cursor.close()
	con.close()
	return render_template('board1.html', writings=writings)

if __name__=='__main__':
	app.run()
